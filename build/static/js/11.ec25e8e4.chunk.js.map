{"version":3,"sources":["../node_modules/formriderjs/src/validators/checkInputMaxLength.js"],"names":["CheckInputMaxLength","this","validationErrorArray","propertyKeyCapitalized","propertyValue","formInputName","formInputValue","propertyErrorText","toString","length","inputIsBeingUsed","push"],"mappings":"iMAAaA,EAAb,WACI,aAAc,oBACVC,KAAKC,qBAAuB,GAFpC,qDAOaC,EAAwBC,EAAeC,EAAeC,EAAgBC,GAe3E,MADAD,EAAiBA,EAAeE,YACbC,OAASL,GAZL,SAAUE,GAC7B,OAAIA,EAAeG,OAAS,GAGE,IAA1BH,EAAeG,aAAnB,EAQyCC,CAAiBJ,IAG1D,OAAO,EAFPL,KAAKC,qBAAqBS,KAAKN,EAAcE,OAvBzD","file":"static/js/11.ec25e8e4.chunk.js","sourcesContent":["export class CheckInputMaxLength {\r\n    constructor() {\r\n        this.validationErrorArray = [];\r\n\r\n    }\r\n\r\n    //check input max length, this function is sensible to empty space\r\n    validate(propertyKeyCapitalized, propertyValue, formInputName, formInputValue, propertyErrorText) {\r\n\r\n        //return true if input is being used / return false if not\r\n        let inputIsBeingUsed = function (formInputValue) {\r\n            if (formInputValue.length > 0) {\r\n                return true;\r\n            }\r\n            if (formInputValue.length === 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        formInputValue = formInputValue.toString();\r\n        if (formInputValue.length > propertyValue && inputIsBeingUsed(formInputValue)) {\r\n            this.validationErrorArray.push(formInputName,propertyErrorText);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n"],"sourceRoot":""}