{"version":3,"sources":["../node_modules/formriderjs/src/validators/checkInputEmail.js"],"names":["CheckInputEmail","this","validationErrorArray","propertyKeyCapitalized","propertyValue","formInputName","formInputValue","propertyErrorText","length","inputIsBeingUsed","test","String","toLowerCase","push"],"mappings":"6LAAaA,EAAb,WACI,aAAc,oBACVC,KAAKC,qBAAuB,GAFpC,qDAMaC,EAAwBC,EAAeC,EAAeC,EAAgBC,GAa3E,IAAsB,IAAlBH,GAXmB,SAASE,GAC5B,OAAGA,EAAeE,OAAS,GAGE,IAA1BF,EAAeE,aAAlB,EAO0BC,CAAiBH,GAAiB,CAE5D,GADY,0JACFI,KAAKC,OAAOL,GAAgBM,eAClC,OAAO,EAEPX,KAAKC,qBAAqBW,KAAKR,EAAcE,QAxB7D","file":"static/js/10.411fc8d4.chunk.js","sourcesContent":["export class CheckInputEmail{\r\n    constructor() {\r\n        this.validationErrorArray = [];\r\n    }\r\n\r\n\r\n    validate(propertyKeyCapitalized, propertyValue, formInputName, formInputValue, propertyErrorText) {\r\n        //return true if input is being used / return false if not\r\n        let inputIsBeingUsed = function(formInputValue){\r\n            if(formInputValue.length > 0) {\r\n                return true;\r\n            }\r\n            if(formInputValue.length === 0) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        if (propertyValue === true && inputIsBeingUsed(formInputValue)) {\r\n            let regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            if (regex.test(String(formInputValue).toLowerCase())) {\r\n                return true;\r\n            } else {\r\n                this.validationErrorArray.push(formInputName,propertyErrorText);\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}